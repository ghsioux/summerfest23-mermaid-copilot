name: "🚚 Build / Push / Deploy"

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**.java'
  pull_request:
    branches: [ main ]
    paths:
      - '**.java'

permissions:
  packages: write
  id-token: write
  checks: write
  contents: read

jobs:

  hello:
    name: "👋 - Starting"
    runs-on: ubuntu-latest  
    steps:
    - name: Starting
      id: init
      run: |
        echo "Starting CI/CD of ${{ github.repository }}"  
        
  build:
    name: "🚧 - Build & Test"
    needs: hello    
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -DskipTests package

      - name: Test with Maven
        run: mvn test

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: calculator-service.jar
          path: target/calculator-service-*.jar

  build_publish_container:
    name: "🐳 - Push container image to GitHub Packages"
    runs-on: ubuntu-latest
    needs:
      - build
    outputs:
      branch: ${{ steps.set-branch-name.outputs.branch }}    
      namespace: ${{ steps.set-kube-env.outputs.namespace }}
      environment: ${{ steps.set-kube-env.outputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Jar file artifact
        uses: actions/download-artifact@v2
        with:
          name: calculator-service.jar
          path: target

      - name: Short SHA
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 8

      - run: echo "SHA8=${{ steps.short-sha.outputs.sha }}" >> $GITHUB_ENV

      - name: GitHub Container Registry Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id : if-main-branch
        if: ${{ github.ref_name == 'main' }}
        run: |
          echo 'BRANCH_NAME=${{ github.ref_name }}' >> $GITHUB_ENV
      - id : if-pr-branch
        if: ${{ github.ref_name != 'main' }}
        run: |
          echo 'BRANCH_NAME=${{ github.head_ref }}' >> $GITHUB_ENV
      - id : set-branch-name
        run: |
          echo "🔩 - Setting up context"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Build and Push Container
        id: container_publish
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            VERSION=1.0.2
            REPOSITORY_NAME=${{ github.repository }}
            revision=${{ github.sha }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.short-sha.outputs.sha }}
            ghcr.io/${{ github.repository }}:${{env.BRANCH_NAME}}

  # Reusable Workflow
  deploy-to-azure-aci:
    name: Azure ACI deployment
    uses: ghsioux-octodemo/reusable-workflows/.github/workflows/deploy-to-azure-aci.yaml@main
    needs: [ build_publish_container ]
    with:
      resource-group: rg-calculator-service
      deployment-name: ghsioux-calculator-service
      deployment-url-prefix: ghsioux-calculator-service
      location: "east us"
      container-image: ghcr.io/${{ github.repository }}:${{ needs.build_publish_container.outputs.branch }}
      ports: 8080
      environment: staging-azure
    secrets:
      az_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      az_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      az_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 

  # Reusable Workflow
  deploy-to-aws-ecs:
    name: AWS ECS deployment
    uses: ghsioux-octodemo/reusable-workflows/.github/workflows/deploy-to-aws-ecs.yaml@main
    needs: [ build_publish_container ]
    with:
      ecs-cluster: ghsioux-ecs
      ecs-service: calc-service-v2
      ecs-task-definition: .github/assets/aws/ecs-task-definition.json
      container-name: calculator-container
      container-image: ghcr.io/${{ github.repository }}:${{ needs.build_publish_container.outputs.branch }}
      aws-region: us-east-2
      environment: staging-aws
    secrets:
      oidc-role-to-assume: ${{ secrets.OIDC_ROLE_TO_ASSUME }}

  # Reusable Workflow
  deploy-to-gcp-cloudrun:
    name: GCP Cloud Run deployment
    uses: ghsioux-octodemo/reusable-workflows/.github/workflows/deploy-to-gcp-cloudrun.yaml@main
    needs: [ build_publish_container ]
    with:
      container-image: ghcr.io/${{ github.repository }}:${{ needs.build_publish_container.outputs.branch }}
      push-to-gar: true
      gar-target-image: "us-central1-docker.pkg.dev/github-380013/github/${{ github.repository }}:${{ needs.build_publish_container.outputs.branch }}"
      region: europe-west1
      cloudrun-service: calculator-service
      environment: staging-gcp
      flags: --port=8080 --platform=managed --allow-unauthenticated
    secrets:
      workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      service_account: ${{ secrets.SERVICE_ACCOUNT }}

  bye:
    name: "👋 - Goodbye"
    needs: [ deploy-to-azure-aci, deploy-to-aws-ecs ]
    runs-on: ubuntu-latest  
    #needs: [ deploy-to-kube-aks, deploy-to-kube-gke, deploy-to-kube-gke-production,deploy-to-kube-aks-production]
    steps:
    - name: bye
      id: bye
      run: |
        echo "Finishing CI/CD of ${{ github.repository }}"            
